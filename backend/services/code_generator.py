# v2.0 - Real GPT-4 code generation
import uuid
import openai
import os

openai.api_key = os.getenv("OPENAI_API_KEY")

def generate_code_project(prompt: str) -> dict:
    project_id = str(uuid.uuid4())

    system_prompt = (
        "You are a senior Python developer. Given a project request, generate a dictionary "
        "of Python file names and their full content. Keep it small and focused on the core logic."
    )
    user_prompt = f"Generate code files for the following prompt:\n\n{prompt}"

    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": user_prompt}
            ],
            temperature=0.4,
        )

        # Assume response content is valid Python dict
        content = response['choices'][0]['message']['content'].strip()
        files = eval(content) if content.startswith("{") else {"main.py": content}

        return {
            "project_id": project_id,
            "files": files,
            "message": "Code generated by GPT-4"
        }
    except Exception as e:
        return {
            "project_id": project_id,
            "files": {},
            "message": f"Error generating code: {str(e)}"
        }
